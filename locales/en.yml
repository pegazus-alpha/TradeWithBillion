en: 
  admin:
    # Language file for admin.py

    # Access denied messages
    access_denied: "Access denied. You are not authorized to use this command."

    # Messages for liste_utilisateurs
    no_users_found: "No users found in the database."
    users_list_header: "List of registered users:"
    user_id_label: "User ID"
    language_label: "Language"
    amount_deposited_label: "Amount Deposited"
    registration_date_label: "Registration Date"
    total_profit_label: "Total Profit"
    last_update_label: "Last Update"
    separator: "------------------------"
    error_retrieving_users: "Error retrieving users: {error}"

    # Messages for info_utilisateur
    provide_user_id: "Please provide a user ID.\nUsage: /info_user <user_id>"
    user_not_found: "User not found."
    user_info_header: "Information for user ID {user_id}:"
    wallet_address_label: "Wallet Address"
    error_occurred: "An error occurred: {error}"

    # Messages for set_description (commented but prepared)
    set_description_usage: "Usage: /set_description <wallet_id> <new_description>"
    description_updated: "Description updated successfully."
  depot:
    # Language file for depot.py

    # Messages for the depot function
    investment_exists: "❌ You already have an ongoing investment, use /top_up instead"
    enter_deposit_amount: "Please enter the USDT amount you want to deposit:"

    # Messages for recevoir_montant_depot
    invalid_positive_amount: "❌ Please enter a valid positive amount >= 100 usdt. Try again:"
    invalid_numeric_amount: "❌ Please enter a valid numeric amount >= 100 usdt. Try again:"
    invalid_petit: "❌ Your deposit must be at least 50% higher than your previous deposit (>= {montant} USDT). Please try again:"
    deposit_amount_confirm: "You want to deposit {amount} USDT.\n\nPlease send the amount to the following wallet address:\n\nUse the Binance Smart Chain (BEP20) blockchain network."
    enter_transaction_hash: "Now, please enter the hash of your transaction to confirm the deposit:"

    # Messages for recevoir_hash_depot
    btn_confirm: "✅ Confirm"
    btn_cancel: "❌ Cancel"
    admin_deposit_notification: "New deposit request:\nUser: {username}\nUser ID: {user_id}\nAmount: {amount} USDT\nTransaction Hash:"
    deposit_request_processing: "✅ Your deposit request and transaction hash is currently being processed. You will be notified shortly."
  globale:
    # Language file for globale.py

    # Messages for the support function
    support_message: "If you need support, please contact our team at @TWBLiveChat"

    # Messages for liens_utiles
    useful_links_header: "🔗 Useful links:"
    coinmarketcap_link: "📊 CoinMarketCap: https://coinmarketcap.com"
    coingecko_link: "📈 CoinGecko: https://coingecko.com"
    binance_link: "💱 Binance: https://binance.com"
    ethereum_link: "🌐 Ethereum: https://ethereum.org"
    bscscan_link: "🔍 BSCScan: https://bscscan.com"
    solana_link: "☀️ Solana: https://solana.com"

    # Messages for a_propos
    about_us_header: "About us:"
    about_title: "Automated Trading Futures and Earn 25% Weekly using TWB"
    about_description: "This advanced system trades for you, generating 25% weekly returns on your principal for 2 months or longer—scalable based on your investment."
    best_part_title: "Best Part? No Lock-In!"
    best_part_description: "Your funds stay flexible—withdraw your principal anytime without restrictions."
    how_it_works_title: "How It Works:"
    step_1: "⿡ Deposit – Fund your account securely."
    step_2: "⿢ Wait 7 Days – Let TWB work its magic."
    step_3: "⿣ Withdraw Profits – Enjoy consistent, hassle-free earnings"

  parrainage:
    title: "📊 *Referral - Summary of your earnings*"
    referrals: "👥 Referrals"
    level: "Level"
    referrals_count: "referrals"
    commissions_received: "💵 Commissions received"
    current_balance: "💰 *Current Balance*"

  errors:
    data_retrieval_error: "❌ An error occurred while retrieving your data."

  retraits:
    # Additional translations for better consistency
    processing_withdrawal: "🔄 Processing withdrawal..."
    withdrawal_cancelled: "❌ Withdrawal cancelled"
    invalid_amount: "❌ Invalid amount"
    minimum_withdrawal: "❌ Minimum withdrawal amount is {min_amount}"
    withdrawal_limit_exceeded: "❌ Withdrawal limit exceeded"
    daily_limit_reached: "❌ Daily withdrawal limit reached"
    
    # Status messages
    status_pending: "⏳ Pending"
    status_processing: "🔄 Processing"
    status_completed: "✅ Completed"
    status_failed: "❌ Failed"
    status_cancelled: "🚫 Cancelled"
    
    # Specific error messages
    network_error: "❌ Network error. Please try again."
    server_error: "❌ Server error. Contact support."
    timeout_error: "⏰ Timeout exceeded. Please try again."
    # Nouveaux textes à ajouter
    btn_usdt_crypto: "💰 USDT (Crypto)"
    btn_local_payment: "📱 Local Payment (Mobile Money)"
    choose_payment_method: "Choose your payment method:"
    choose_country: "🌍 Choose your country:"
    no_operators_available: "❌ No operators available for this country."
    choose_mobile_operator: "📱 Choose your mobile operator ({country}):"
    enter_phone_number: "📞 Please enter your phone number associated with {operator}:"
    enter_valid_number: "❌ Please enter a valid number."
    enter_full_name: "👤 Please enter your full name:"
    enter_your_name: "❌ Please enter your name."
    local_withdrawal_recorded: "✅ Your local payment withdrawal request has been recorded.\nYou will receive confirmation once the payment is made."
    
    # Admin messages for local withdrawal
    admin_new_local_withdrawal: |
      🏦 NEW LOCAL WITHDRAWAL REQUEST
      👤 User: {username}
      🆔 Telegram ID: {user_id}
      🆔 UDI: {udi}
      💳 Binance Deposit: {binance_depot}
      💰 Balance: {balance}
      💸 Available Amount: {available_amount}
      🌍 Country: {country}
      📱 Operator: {operator}
      📞 Phone Number: {phone_number}
      👤 Full Name: {full_name}
    admin_new_local_withdrawal2: |
      🏦 NEW LOCAL WITHDRAWAL REQUEST (referral)
      👤 User: {username}
      🆔 Telegram ID: {user_id}
      🆔 UDI: {udi}
      💳 Binance Deposit: {binance_depot}
      💰 Balance: {balance}
      💸 Available Amount: {available_amount}
      🌍 Country: {country}
      📱 Operator: {operator}
      📞 Phone Number: {phone_number}
      👤 Full Name: {full_name}
    
    btn_payment_completed: "✅ Payment Completed"
    # Messages for hash and image handling
    user_not_found: "❌ User not found. Admin ID: {admin_id}, Dict: {dict_content}"
    send_payment_image: "❌ Please send a payment confirmation image."
    local_withdrawal_success: "✅ Your withdrawal of {amount} has been successfully processed.\nHere is the payment proof:"
    user_notified_with_proof: "✅ The user has been notified with the payment proof."
    send_mobile_money_proof: "📷 Please send a mobile money payment confirmation image:"
    error_extracting_user_id: "❌ Error while extracting user ID"

    # Language file for retraits.py
    user_not_registered: "❌ You need to make a deposit before requesting a withdrawal."
    no_benefits: "❌ You currently have no available benefits to withdraw."
    database_error: "❌ Error while checking your status: {error}"
    # Messages for the retrait function
    enter_wallet_address: "Please enter your wallet address for the withdrawal:"

    # Messages for recevoir_adresse
    invalid_input: "❌ Invalid input. Please try again."
    select_blockchain_network: "Please select the blockchain network:"

    # Messages for recevoir_reseau
    invalid_wallet_format: "❌ The wallet address format does not match the selected blockchain network."
    withdrawal_request_received: "✅ Your withdrawal request has been received. Please wait a moment."
    withdrawal_request_recorded: "✅ Your withdrawal request has been recorded."

    # Messages for admin
    admin_withdrawal_header: "📤 [WITHDRAWAL]"
    admin_withdrawal_header2: "📤 [WITHDRAWAL REFERRAL]"
    admin_username: "👤 Username: @{username}"
    admin_telegram_id: "🆔 Telegram ID: {user_id}"
    admin_udi: "🔢 UDI: {udi}"
    admin_binance_deposit: "💸 Binance Deposit Address: {binance_depot}"
    admin_balance: "💰 Balance: {balance}"
    admin_available_amount: "💸 Available Amount: {available_amount}"
    admin_wallet_address: "🔍 Wallet Address: "
    admin_blockchain_network: "🌐 Blockchain Network: {network}"

    # Buttons for admin
    btn_done: "✅ Done"
    btn_not: "❌ Not"

    # Messages for recevoir_hash_retrait
    invalid_hash: "❌ Invalid hash. Please try again."
    invalid_hash_format: "❌ Invalid hash format. The hash must start with '0x' and contain 64 hexadecimal characters."
    user_not_found: "⚠️ Error: user not found."
    withdrawal_processed: "✅ Your withdrawal of {montant}  has been successfully processed.\n\n🔗 Transaction hash:"
    user_notified: "✅ The user has been notified with the transaction hash."
    failed_notify_user: "⚠️ Failed to notify user: {error}"

    # Messages for retrait_done
    enter_transaction_hash: "✅ Please enter the transaction hash to confirm the withdrawal:"

    # Messages for retrait_not
    withdrawal_not_confirmed: "❌ Withdrawal was not confirmed."
  store:
    # Language file for store.py

    # Product data
    product_1_name: "Product 1"
    product_1_description: "Product 1 description"
    product_2_name: "Product 2"
    product_2_description: "Product 2 description"
    product_3_name: "Product 3"
    product_3_description: "Product 3 description"
    product_4_name: "Product 4"
    product_4_description: "Product 4 description"
    product_5_name: "Product 5"
    product_5_description: "Product 5 description"
    product_6_name: "Product 6"
    product_6_description: "Product 6 description"
    product_7_name: "Product 7"
    product_7_description: "Product 7 description"
    product_8_name: "Product "
    product_8_description: "Product  description"
    product_price_placeholder: "-- USDT"

    # Messages for our_store
    store_header: "🏪 **OUR STORE**"
    store_intro: "Discover our selection of quality products!\nHere is our gallery of available products:"
    gallery_caption: "🛍️ Here are our available products:"
    store_footer_header: "📞 **CONTACT**"
    store_footer_message: "For any questions or orders, please contact our support team!\n\n🔔 Stay tuned to discover our new products!"

    # Messages for product details
    product_price_label: "💰 Price: {price}"
    product_separator: "━━━━━━━━━━━━━━━━━━━━"

    # Buttons
    btn_more_info: "💬 More info"
    btn_order: "🛒 Order"
    btn_order_now: "🛒 Order now"
    btn_back_to_store: "⬅️ Back to store"
    btn_contact_support: "📞 Contact support"

    # Messages for gerer_callback_produit - Product info
    detailed_description_header: "📝 **Detailed description:**"
    price_header: "💰 **Price:** {price}"
    features_header: "✅ **Features:**"
    feature_premium_quality: "• Premium quality"
    feature_fast_delivery: "• Fast delivery"
    feature_warranty: "• Warranty included"
    contact_more_info: "📞 Contact us for more information!"

    # Messages for gerer_callback_produit - Order product
    order_header: "🛒 **ORDER: {product_name}**"
    order_instructions_header: "📞 **To complete your order:**"
    order_step_1: "1. Contact our support"
    order_step_2: "2. Specify the product"
    order_step_3: "3. Confirm your delivery address"
    order_confirmation: "✅ Our team will contact you shortly!"

    # Messages for store return
    back_to_store_message: "🏪 Back to the store...\n\nUse the **🏪 Our Store** command to view our products again."

    # Messages for contact support
    contact_support_header: "📞 **CONTACT SUPPORT**"
    support_intro: "Our team is here to help you!"
    support_email: "📧 Email: support@yourcompany.com"
    support_telegram: "💬 Telegram: @your_support"
    support_hours: "⏰ Hours: 9am–6pm (Mon–Fri)"
    support_response: "We will get back to you as soon as possible!"
  telegrame:
    # telegrame.py - Language file for the Telegram bot

    # Welcome and navigation messages
    welcome_message: "Welcome! To begin, use the commands to proceed."
    operation_cancelled: "❌ Operation cancelled."
    previous_operation_cancelled: "❌ Previous operation cancelled. Starting new command: {command}"
    action_cancelled: "❌ Action cancelled."

    # Automatic benefits system messages
    benefits_update_title: "🎉 **Benefits Update!**"
    new_benefits: "💰 **New benefits:** {amount:.2f} USDT ({weeks} week(s))"
    total_benefits: "📈 **Total benefits:** {amount:.2f} USDT"
    initial_investment: "💳 **Initial investment:** {amount:.2f} USDT"
    wallet_address: "🏦 **Wallet address:** {address}"
    wallet_not_provided: "Not provided"
    benefits_added_message: "Your benefits have been automatically added to your account!"
    join_channel_message: "Join our channel to stay informed: https://t.me/+c0mWuQVC6OEwMTM0"

    # Admin messages for benefits
    admin_benefits_update: "📊 **Automatic benefits update**"
    admin_user_id: "👤 **User ID:** {user_id}"
    admin_benefits_added: "💰 **Benefits added:** {amount:.2f} USDT"
    admin_new_total_benefits: "📈 **New total benefits:** {amount:.2f} USDT"
    admin_investment: "💳 **Investment:** {amount:.2f} USDT"
    admin_update_date: "🕒 **Update date:** {date}"
    admin_weeks_processed: "⏱️ **Weeks processed:** {weeks}"

    # Deposit confirmation messages
    existing_investment_error: "❌ You already have an ongoing investment, use /top_up instead"
    deposit_confirmed_admin: "✅ Deposit of {amount} USDT confirmed for user ID {user_id}."
    deposit_confirmed_user: "✅ Your deposit of {amount} USDT has been successfully confirmed. Thank you!\nJoin our channel to stay updated with all the latest information:\nhttps://t.me/+c0mWuQVC6OEwMTM0"

    # Main menu buttons
    menu_deposit: "💰 Deposit"
    menu_withdraw: "💸 Withdraw"
    menu_top_up: "📈 Top Up"
    menu_our_store: "🏪 Our Store"
    menu_my_info: "👤 My Info"
    menu_market_update: "📊 Market Update"
    menu_about: "ℹ️ About"
    menu_support: "🆘 Support"

    # Admin buttons
    admin_user_list: "👥 User List"
    admin_user_info: "🔍 User Info"

    # Cancel button
    cancel_button: "❌cancel"

    # System log messages
    log_starting_benefits_system: "🚀 Starting automatic benefits verification system..."
    log_checking_frequency: "⏰ Checking every 30 minutes, updating benefits every 7 days"
    log_benefits_updated: "✅ Updated benefits for {count} user(s) at {time}"

    # Error messages (for logs)
    error_user_notification: "[User notification error]: {error}"
    error_admin_notification: "[Admin notification error for user {user_id}]: {error}"
    error_user_processing: "[User processing error {user_id}]: {error}"
    error_benefits_verification: "[Benefits verification error]: {error}"
    error_verification_loop: "[Error in verification loop]: {error}"
    error_callback_admin: "[Error] callback_query_handler_admin: {error}"

    # Callback patterns
    pattern_confirm: "confirmer_"
    pattern_cancel: "annuler"
    pattern_withdrawal_done: "retrait_done_"
    pattern_withdrawal_not: "retrait_not_"
    pattern_product_info: "info_produit_"
    pattern_order_product: "commander_produit_"
    pattern_store_return: "retour_boutique"
    pattern_contact_support: "contact_support"
  update:
    # update.py - Language file for the deposit update system
    deposit_required: "❌ You must make a deposit before you can update your balance."
    error_checking_deposit: "❌ An error occurred while checking your deposit."
    # Additional deposit messages
    must_register_first: "❌ You must first register using /deposit before making a deposit."
    balance_update_not_profitable: "It would not be profitable for you to do this now. Please wait for the end of the cycle in {days} days."
    balance_update_wait: "Balance update is not possible today. Please wait {days} more days for the next update window."
    balance_update_allowed: "Balance update is allowed."
    registration_date_not_found: "Registration date not found."

    additional_deposit_amount: "💰 How much more would you like to deposit? (in USDT):"
    invalid_amount_error: "❌ Please enter a valid positive amount (numbers only). Minimum required: {montant}."    
    amount_error_restart: "❌ Error: Amount not found. Please restart the process."

    # Additional deposit instruction messages
    additional_deposit_info: "Thank you. To make an additional deposit of {amount:.2f} USDT, here is the information:\n📥 Platform wallet address in the next message:\n🌐 Blockchain network: Binance Smart Chain (BSC)\n\nOnce the transfer is completed, the admin will confirm your deposit."
    hash_request_message: "Please now enter the hash of your transaction to confirm the additional deposit:"

    # Processing messages
    processing_request: "✅ Your additional deposit request and transaction hash is currently being processed. You will be notified shortly."
    processing_error: "❌ Error processing request. Please try again."

    # Admin messages for additional deposit
    admin_additional_deposit_title: "📥 [ADDITIONAL DEPOSIT INITIATED]"
    admin_user_info: "👤 User: @{username}"
    admin_telegram_id: "🆔 Telegram ID: {user_id}"
    admin_declared_amount: "💵 Declared additional amount: {amount:.2f} USDT"
    admin_transaction_hash: "🔗 Transaction Hash:"
    admin_user_registered: "ℹ️ User already registered"

    # Buttons for additional deposit
    confirm_deposit_button: "✅ Confirm deposit"
    cancel_button_supp: "❌ Cancel"

    # Admin confirmation messages
    additional_deposit_confirmed: "✅ Additional deposit of {amount:.2f} USDT confirmed for user {user_id}."
    additional_deposit_confirmed_user: "✅ Your additional deposit of {amount:.2f} USDT has been successfully confirmed and added to your balance."
    balance_update_failed: "❌ Failed to update balance for user {user_id}. Please check the database."
    additional_deposit_cancelled: "❌ Additional deposit cancelled"
    invalid_confirmation_data: "❌ Invalid confirmation data."

    # Log messages for update
    log_database_path: "[DEBUG] Using database at: {path}"
    log_updating_user: "[DEBUG] Updating user_id: {user_id} with montant_ajoute: {amount}"
    log_sql_update: "[DEBUG] SQL: UPDATE users SET deposit_amount = {total} WHERE user_id = {user_id}"
    log_balance_success: "[SUCCESS] Balance updated for user {user_id}: {current} + {added} = {total}"
    log_user_not_found: "[ERROR] User {user_id} not found in database"
    log_callback_data: "[DEBUG] Callback data received: {data}"
    log_parsed_parts: "[DEBUG] Parsed parts: {parts}"
    log_confirming_deposit: "[DEBUG] Confirming deposit: user_id:{user_id}, amount:{amount}"
    log_admin_notification_success: "[SUCCESS] Admin notification sent for user {user_id}"
    log_admin_notification_failed: "[ERROR] Failed to send admin notification: {error}"
    log_user_notified: "[SUCCESS] User {user_id} notified of confirmed deposit"
    log_user_notification_failed: "[ERROR] Failed to notify user {user_id}: {error}"
    log_deposit_cancelled: "[INFO] Additional deposit cancelled by admin"
    log_invalid_confirmation: "[ERROR] Invalid confirmation data: {error}"

    # Test messages
    log_testing_balance: "[DEBUG] Testing balance update for user {user_id} with amount {amount}"
    log_user_does_not_exist: "[ERROR] User {user_id} does not exist"
    log_test_success: "[SUCCESS] Test balance update completed"
    log_test_failed: "[ERROR] Test balance update failed"

    # General errors
    error_get_registration_date: "[Error] get_user_registration_date: {error}"
    error_update_balance: "[Error] update_balance: {error}"

    # Callback patterns for update
    pattern_confirm_supp: "confir_supp_"
    pattern_cancel_supp: "annuler_supp_"

    # Conversation states
    hash_transaction_depot_supplementaire: "hash_transaction_depot_supplementaire"
  user:
    # user.py - Language file for user management

    # User information messages
    user_udi_number: "🆔 Your UDI number: {udi}"
    user_binance_address: "💼 Binance deposit address: {address}"
    user_balance: "💰 Balance: {balance}"
    user_registration_date: "📅 Registration date: {date}"
    user_benefice_hebdomadaire: "💳 Weekly profit: {benefice}"
    user_benefice_total: "💸 Current profit: {benefice_total}"
    # User status messages
    user_not_registered: "ℹ️ You are not registered yet. Please make an investment to get started."
    user_address_not_registered: "Not registered"
    user_balance_zero: "0 USDT"
    user_info_error: "Error"

    # Log messages for user
    log_error_register_user: "[Error] register_user: {error}"
    log_error_get_user_info: "[Error] get_user_info: {error}"
    log_error_user_exists: "[Error] user_exists: {error}"
    log_error_user_bloque: "something wrong"
    user_name: "name: {nom}"
    # Default language
    default_language: "en"

  commissions:
    notification_received: "🎉 Congratulations! You received a commission of {montant} USDT (level {niveau}) thanks to a deposit from one of your referrals."
    withdrawal_available: "💰 Excellent news!\n\nYour total commissions amount to {total} USDT.\nYou can now withdraw your commissions!\n\nUse the appropriate command to proceed with the withdrawal."

  referral_system:
    explanation: "🎯 *How the referral system works*\n\nOur referral system allows you to earn commissions every time a user joins the bot with your link and makes a deposit.\n\n🧩 *3 referral levels* are taken into account:\n• 🔹 *Level 1* (your direct referrals): 5%\n• 🔸 *Level 2* (referrals of your referrals): 3%\n• ⚫ *Level 3* (level 2 referrals): 2%\n\n📌 *Example:* If your direct referral deposits 100 USDT, you receive 5 USDT.\nIf they refer someone in turn, you continue to earn, automatically.\n\n💰 *Earnings are accumulated in your referral balance*, viewable at any time.\nYou can request a withdrawal once your balance reaches 10 USDT.\n\n📨 To invite people, simply share your referral link that you'll find in the main menu."

  notif:
    demande: "✅ Your withdrawal request has been received. Please wait a moment.!\n"
    address: "🪪 Adress :"
    reseau: "🔗 Network :"
    texte: "❌To make a withdrawal, you must have a referral bonus of at least 10 USDT.\n"
    solde: "💰 Current balance :"